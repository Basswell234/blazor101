@page "/servers"
@inject NavigationManager NavigationManager

<h3>Servers</h3>

<div class="container-fluid text-center">
    <div class="row w-100">
        @foreach(var city in cities)
        {
            <div class="card" style="width: 15rem; margin:5px">
                <img src="@($"/images/{city}.png")" class="card-img-top" alt="Image of the city">
                <div class="card-body">
                    <h5 class="card-title">The City of @city</h5>
                    <p class="card-text">Some quick example text to build on the card title</p>
                    <button type="button" class="btn btn-primary" style="margin: 5px;">
                        <span>@city</span>
                    </button>
                </div>
            </div>
        }
    </div>
</div>
<br>

<ul>
    @foreach (var server in servers)
    {
        <li>
            @server.Name in @server.City is <span style="color: @(server.IsOnline ? "green" : "red")">
                @(server.IsOnline ? "online" : "offline")
            </span><span><button class="btn btn-warning" style="margin: 5px;">
                <NavLink class="nav-link" href=@($"/servers/edit/{server.ServerId}")>Edit</NavLink>
            </button></span><br>
            <EditForm Model="server" FormName="@($"formServer{server.ServerId}")" OnValidSubmit="@(() => {DeleteServer(server.ServerId);})">
                <button type="submit" class="btn btn-danger" >Delete</button>
            </EditForm>


        </li>
    }
</ul><br>

<a href="/servers/add" class="btn btn-primary"> Add Server</a>


@code {
    private List<Server> servers = ServersRepository.GetServersByCity("New York");
    private List<string> cities = CitiesRepository.GetCities();    

    private void DeleteServer(int serverId){
        if(serverId > 0){
            ServersRepository.DeleteServer(serverId);
            NavigationManager.Refresh();
        }
    }    
}
